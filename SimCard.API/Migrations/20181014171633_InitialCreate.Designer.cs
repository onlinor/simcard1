// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimCard.API.Persistence;

namespace simcard.api.Migrations
{
    [DbContext(typeof(SimCardDBContext))]
    [Migration("20181014171633_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("SimCard.API.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ProductID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SimCard.API.Models.RelationalClasses.ProductShop", b =>
                {
                    b.Property<int>("ShopID");

                    b.Property<int>("ProductID");

                    b.HasKey("ShopID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductShop");
                });

            modelBuilder.Entity("SimCard.API.Models.Shop", b =>
                {
                    b.Property<int>("ShopID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ShopID");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("SimCard.API.Models.RelationalClasses.ProductShop", b =>
                {
                    b.HasOne("SimCard.API.Models.Product", "Product")
                        .WithMany("ProductShops")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SimCard.API.Models.Shop", "Shop")
                        .WithMany("ProductShops")
                        .HasForeignKey("ShopID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
